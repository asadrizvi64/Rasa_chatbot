#version: "3.1"

#rules:
#  - rule: Handle policy inquiry
#    steps:
#      - intent: inquire_policy
#      - action: action_provide_policy_info
#rules:
#- rule: Ask the user to rephrase whenever they send a message with low NLU confidence
#  steps:
#  - intent: nlu_fallback
#  - action: utter_please_rephrase
##rules:
##- rule: Implementation of the Two-Stage-Fallback
##  steps:
##  - intent: nlu_fallback
##  - action: action_two_stage_fallback
##  - active_loop: action_two_stage_fallback
#- rule: Activate form
#  steps:
#  - intent: order_pizza
#  - action: pizza_order_form
#  - active_loop: pizza_order_form
#
#- rule: Submit form
#  condition:
#  # Condition that form is active.
#  - active_loop: pizza_order_form
#  steps:
#  # Form is deactivated
#  - action: pizza_order_form
#  - active_loop: null
#  - slot_was_set:
#    - requested_slot: null
#  # The actions we want to run when the form is submitted.
#  - action: utter_submit
#  - action: utter_slots_value

#rules:
#
#- rule: Say goodbye anytime the user says goodbye
#  steps:
#  - intent: goodbye
#  - action: utter_goodbye
#
#- rule: Say 'I am a bot' anytime the user challenges
#  steps:
#  - intent: bot_challenge
#  - action: utter_iamabot
#
#- rule: Activate Pizza Form
#  steps:
#  - intent: buy_pizza
#  - action: simple_pizza_form
#  - active_loop: simple_pizza_form
#
#- rule: Submit Pizza Form
#  condition:
#  - active_loop: simple_pizza_form
#  steps:
#  - action: simple_pizza_form
#  - active_loop: null
#  - slot_was_set:
#    - requested_slot: null
#  - action: utter_submit
#  - action: utter_pizza_slots
#
#- rule: Interruption in Pizza Form
#  condition:
#  # Condition that form is active.
#  - active_loop: simple_pizza_form
#  steps:
#  # This unhappy path handles the case of an intent `bot_challenge`.
#  - intent: bot_challenge
#  - action: utter_iamabot
#  # Return to form after handling the `bot_challenge` intent
#  - action: simple_pizza_form
#  - active_loop: simple_pizza_form
#
#- rule: Activate Fancy Pizza Form
#  steps:
#  - intent: buy_fancy_pizza
#  - action: fancy_pizza_form
#  - active_loop: fancy_pizza_form
#
#- rule: Submit Fancy Pizza Form
#  condition:
#  - active_loop: fancy_pizza_form
#  steps:
#  - action: fancy_pizza_form
#  - active_loop: null
#  - slot_was_set:
#    - requested_slot: null
#  - action: utter_submit
#  - action: utter_pizza_slots
#
#rules:
#- rule: Activate form
#  steps:
#  - intent: request_insurance_quote
#  - action: insurance_quote_form
#  - active_loop: insurance_quote_form
version: "3.1"

rules:

- rule: Say goodbye anytime the user says goodbye
  steps:
  - intent: goodbye
  - action: utter_goodbye

- rule: Say 'I am a bot' anytime the user challenges
  steps:
  - intent: bot_challenge
  - action: utter_iamabot

- rule: Activate Pizza Form
  steps:
  - intent: buy_pizza
  - action: simple_pizza_form
  - active_loop: simple_pizza_form

- rule: Submit Pizza Form
  condition:
  - active_loop: simple_pizza_form
  steps:
  - action: simple_pizza_form
  - active_loop: null
  - slot_was_set:
    - requested_slot: null
  - action: utter_submit
  - action: utter_pizza_slots

- rule: Interruption in Pizza Form
  condition:
  # Condition that form is active.
  - active_loop: simple_pizza_form
  steps:
  # This unhappy path handles the case of an intent `bot_challenge`.
  - intent: bot_challenge
  - action: utter_iamabot
  # Return to form after handling the `bot_challenge` intent
  - action: simple_pizza_form
  - active_loop: simple_pizza_form

- rule: Activate Fancy Pizza Form
  steps:
  - intent: buy_fancy_pizza
  - action: fancy_pizza_form
  - active_loop: fancy_pizza_form

- rule: Submit Fancy Pizza Form
  condition:
  - active_loop: fancy_pizza_form
  steps:
  - action: fancy_pizza_form
  - active_loop: null
  - slot_was_set:
    - requested_slot: null
  - action: utter_submit
  - action: utter_pizza_slots


- rule: Activate Fancy Pizza Form
  steps:
  - intent: buy_fancy_pizza
  - action: fancy_pizza_form
  - active_loop: fancy_pizza_form


- rule: Activate Coverage Form
  steps:
  - intent: coverage_options
  - action: coverage_form
  - active_loop: fancy_pizza_form

- rule: Submit Coverage Form
  condition:
  - active_loop: coverage_form
  steps:
  - action: coverage_form
  - active_loop: null
  - slot_was_set:
    - requested_slot: null
  - action: action_coverage_option


- rule: Activate Cost Form
  steps:
  - intent: get_policy_quote
  - action: cost_form
  - active_loop: cost_form


- rule: Submit Cost Form
  condition:
  - active_loop: cost_form
  steps:
  - action: cost_form
  - active_loop: null
  - slot_was_set:
    - requested_slot: null
  - action: action_insurance_cost

- rule: Activate RequirementForm
  steps:
  - intent: legal_requirements
  - action: requirement_form
  - active_loop: requirement_form


- rule: Submit Requirement Form
  condition:
  - active_loop: requirement_form
  steps:
  - action: requirement_form
  - active_loop: null
  - slot_was_set:
    - requested_slot: null
  - action: action_legal_requirement


- rule: Interruption in cost Form
  condition:
  # Condition that form is active.
  - active_loop: cost_form
  steps:
  # This unhappy path handles the case of an intent `bot_challenge`.
  - intent: bot_challenge
  - action: utter_iamabot
  # Return to form after handling the `bot_challenge` intent
  - action: cost_form
  - active_loop: cost_form


- rule: Interruption in coverage Form
  condition:
  # Condition that form is active.
  - active_loop: coverage_form
  steps:
  # This unhappy path handles the case of an intent `bot_challenge`.
  - intent: bot_challenge
  - action: utter_iamabot
  # Return to form after handling the `bot_challenge` intent
  - action: coverage_form
  - active_loop: coverage_form



- rule: Interruption in coverage Form
  condition:
  # Condition that form is active.
  - active_loop: coverage_form
  steps:
  # This unhappy path handles the case of an intent `bot_challenge`.
  - intent: bot_challenge
  - action: utter_iamabot
  # Return to form after handling the `bot_challenge` intent
  - action: coverage_form
  - active_loop: coverage_form


- rule: Interruption in requirement Form
  condition:
  # Condition that form is active.
  - active_loop: requirement_form
  steps:
  # This unhappy path handles the case of an intent `bot_challenge`.
  - intent: bot_challenge
  - action: utter_iamabot
  # Return to form after handling the `bot_challenge` intent
  - action: requirement_form
  - active_loop: requirement_form